/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import demrar.DBConnectivity;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.SwingUtilities;
import java.time.LocalDate;

/**
 *
 * @author emmanuelle
 */
public class ProduceInvoiceOrReminderStep1 extends javax.swing.JPanel {

    private Connection conn = null;
    private Statement stm = null;
    private ResultSet resultSet = null;
    private ResultSet regRS = null;

    private static String regNo = "";
    // public String nonStatic = "";

    /*/add new stuff here/*/
    private static String model = "";
    private static String make = "";
    private static String description = "";
    private static String invoiceNo;
    private static String name;
    private static String address;
    private static String postCode;
    private static String jobDuration;
    private static double labourPrice;
    private static double hours;
    private static double amount;
    private static String mechanic;
    private static String jobNo;
    private static String telNo;
    private static String dateBookedIn;
    private static String customerId;

    /**
     * Creates new form ProduceInvoice
     */
    public ProduceInvoiceOrReminderStep1(boolean callRegNo) {
        initComponents();
        if (callRegNo == true) {
            regNoTest();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        regNoComboBox = new javax.swing.JComboBox();
        refreshButton = new javax.swing.JButton();
        doneButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        regNoComboBox2 = new javax.swing.JComboBox();
        doneButton2 = new javax.swing.JButton();
        refreshButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        jLabel1.setText("GARITS");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/logo.jpg"))); // NOI18N

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setText("Select Vehicle registration No. (not paid):");

        regNoComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regNoComboBoxActionPerformed(evt);
            }
        });

        refreshButton.setText("Refresh");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        doneButton.setText("Done");
        doneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneButtonActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setText("Select Vehicle registration No. (paid):");

        regNoComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regNoComboBox2ActionPerformed(evt);
            }
        });

        doneButton2.setText("Done");
        doneButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneButton2ActionPerformed(evt);
            }
        });

        refreshButton2.setText("Refresh");
        refreshButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButton2ActionPerformed(evt);
            }
        });

        jLabel3.setText("OR");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 392, Short.MAX_VALUE)
                .addComponent(jLabel2))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jButton1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(2, 2, 2)
                                            .addComponent(jLabel5))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(52, 52, 52)
                                            .addComponent(refreshButton2)))
                                    .addGap(38, 38, 38)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(doneButton2)
                                        .addComponent(regNoComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(doneButton)))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(2, 2, 2)
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(regNoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(269, 269, 269)
                            .addComponent(jLabel3)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addComponent(refreshButton)
                        .addGap(48, 48, 48)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(regNoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(refreshButton)
                    .addComponent(doneButton))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(regNoComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(refreshButton2)
                            .addComponent(doneButton2))
                        .addContainerGap())))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void regNoComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regNoComboBoxActionPerformed
        // TODO add your handling code here:
        System.out.println(regNoComboBox.getSelectedItem());
    }//GEN-LAST:event_regNoComboBoxActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        // TODO add your handling code here:
        regNoTest();
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void doneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneButtonActionPerformed
        // TODO add your handling code here:
        regNo = regNoComboBox.getSelectedItem().toString();
        getCustomerId();
        getMechanic();

        Homepage homepage = (Homepage) SwingUtilities.getWindowAncestor(this);
        homepage.setContentPane(new ProduceInvoiceOrReminderStep2());
        homepage.setVisible(true);

    }//GEN-LAST:event_doneButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Homepage homepage = (Homepage) SwingUtilities.getWindowAncestor(this);
        homepage.setContentPane(new FranchiseeHome());
        homepage.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void regNoComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regNoComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_regNoComboBox2ActionPerformed

    private void doneButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneButton2ActionPerformed
        // TODO add your handling code here:
        regNo = regNoComboBox2.getSelectedItem().toString();
        getCustomerId();
        getMechanic();

        Homepage homepage = (Homepage) SwingUtilities.getWindowAncestor(this);
        homepage.setContentPane(new ProduceInvoiceOrReminderStep2());
        homepage.setVisible(true);
    }//GEN-LAST:event_doneButton2ActionPerformed

    private void refreshButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButton2ActionPerformed
        // TODO add your handling code here:
        regNoTest();
    }//GEN-LAST:event_refreshButton2ActionPerformed
//get attributes and calculations from different tables which correspond to the correct customer and vehicle in order to use them for the Invoice, reminders and MoT Reminder
    public void setRegNo(String regNo) {
        this.regNo = regNo;
    }
    
    public String getModel() {
        System.out.println("getModel:");
        conn = DBConnectivity.getConnection();
        String sql = ("SELECT model FROM Vehicle WHERE regNo ='" + regNo + "'");
        try {
            stm = conn.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            model = rs.getString(1);
            // System.out.println(model + " yee");
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
        DBConnectivity.disconnect(conn);
        return model;
    }

    public void regNoTest() {
        //change WHERE clause to WHERE customerId = 1
        conn = DBConnectivity.getConnection();
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        DefaultComboBoxModel model2 = new DefaultComboBoxModel();
        regNoComboBox.setModel(model);
        regNoComboBox2.setModel(model2);
        String sql = "SELECT regNo FROM Vehicle WHERE paymentType = 'Pay Later'";
        String sql2 = "SELECT regNo FROM Vehicle WHERE paymentType != 'Pay Later' ";
        try {
            Statement statement = conn.createStatement();
            Statement statement2 = conn.createStatement();
            ResultSet rs = statement.executeQuery(sql);
            ResultSet rs2 = statement2.executeQuery(sql2);

            int pendingVehicles = 0;
            int paidVehicles = 0;
            while (rs.next()) {
                regNoComboBox.addItem(rs.getString("regNo"));
                pendingVehicles++;
            }
            if (pendingVehicles == 0) {
                regNoComboBox.addItem("No pending vehicles");
                doneButton.setEnabled(false);

            } else {
                doneButton.setEnabled(true);
            }
            while (rs2.next()) {
                regNoComboBox2.addItem(rs2.getString("regNo"));
                paidVehicles++;
            }
            if (paidVehicles == 0) {
                regNoComboBox2.addItem("No vehicles paid");
                doneButton2.setEnabled(false);

            } else {
                doneButton2.setEnabled(true);
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
        DBConnectivity.disconnect(conn);
        //regNo = regNoComboBox.getSelectedItem().toString();
        //   nonStatic = regNoComboBox.getSelectedItem().toString();
    }
//   

    public static String getRegNo() {
        return regNo;
    }

    public String getMake() {
        System.out.println("getMake:");
        conn = DBConnectivity.getConnection();
        String sql = ("SELECT make FROM Vehicle WHERE regNo ='" + regNo + "'");
        try {
            stm = conn.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            make = rs.getString(1);
            // System.out.println(make + " yup");
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
        DBConnectivity.disconnect(conn);
        return make;
    }

    public String getDescription() {
        System.out.println("getDescription:");
        conn = DBConnectivity.getConnection();
        String sql = ("SELECT jobDescription FROM Job WHERE VehicleregNo ='" + regNo + "'");
        try {
            stm = conn.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            description = rs.getString(1);
            // System.out.println(description + " lol");
            // System.out.println("does the query even work");
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
        DBConnectivity.disconnect(conn);
        return description;
    }

    public String getInvoiceNo() {
        System.out.println("getInvoiceNo:");
        conn = DBConnectivity.getConnection();
        String sql = ("SELECT invoiceId FROM Invoice WHERE VehicleregNo ='" + regNo + "'");
        try {
            stm = conn.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            int i = rs.getInt(1);
            invoiceNo = Integer.toString(i);
            // System.out.println(invoiceNo + " lol");
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
        DBConnectivity.disconnect(conn);
        return invoiceNo;
    }

    public String getCustomerId() {
        System.out.println("getCustomerId:");
        conn = DBConnectivity.getConnection();
        String sql = ("SELECT c.customerId FROM Customer AS c INNER JOIN Vehicle AS v ON c.customerId = v.customerId WHERE v.regNo ='" + regNo + "'");
        try {
            stm = conn.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            customerId = Integer.toString(rs.getInt(1));
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
        DBConnectivity.disconnect(conn);
        return customerId;
    }

    @Override
    public String getName() {

        /*/ should be cuStomer /*/
        System.out.println("getName");
        conn = DBConnectivity.getConnection();
        String sql = ("SELECT Firstname, Lastname FROM Customer WHERE customerId = '" + customerId + "'");
        try {
            stm = conn.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            name = rs.getString(1);
            try {
                String lastName = rs.getString(2);
                if (lastName.isEmpty() == false) {
                    name = name + " " + lastName;
                }
            } catch (NullPointerException e) {
            }

            //cutomer = Integer.toString(i);
            //System.out.println(name + " lol");
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
        DBConnectivity.disconnect(conn);
        return name;
    }

    public String getAddress() {

        /*/ should be cuStomer /*/
        System.out.println("getAddress:");
        conn = DBConnectivity.getConnection();
        String sql = ("SELECT address FROM Customer WHERE customerId ='" + customerId + "'");
        try {
            stm = conn.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            address = rs.getString(1);
            System.out.println("t'assume que ca marche?");
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
        DBConnectivity.disconnect(conn);
        return address;
    }

    public String getPostCode() {

        /*/ should be cuStomer /*/
        System.out.println("getPostCode");
        conn = DBConnectivity.getConnection();
        String sql = ("SELECT postcode FROM Customer WHERE customerId ='" + customerId + "'");
        try {
            stm = conn.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            postCode = rs.getString(1);
            System.out.println("t'assume que ca marche?");
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
        DBConnectivity.disconnect(conn);
        return postCode;
    }

    public String getMechanic() {
        System.out.println("getMechanic:");
        conn = DBConnectivity.getConnection();
        String sql = ("SELECT mechanicId FROM Job WHERE VehicleregNo = '" + regNo + "'");

        try {

            stm = conn.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            mechanic = rs.getString(1);

            System.out.println("does this long query work?");
            // System.out.println("labour price is " + labourPrice);
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
        DBConnectivity.disconnect(conn);
        return mechanic;
    }

    public double getAmount() {
        System.out.println("getAmount");
        conn = DBConnectivity.getConnection();
        String sql = ("SELECT amount FROM Invoice WHERE regNo ='" + regNo + "'");
        try {
            stm = conn.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            amount = rs.getDouble(1);
            //System.out.println("ca devrait etre bon");
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
        DBConnectivity.disconnect(conn);
        return amount;
    }

    public double getLabourPrice() {

        //String sqlPrior = ("SELECT MechanicName FROM Job WHERE VehicleregNo = '" + regNo + "'");
        System.out.println("getLabourPrice:");
        conn = DBConnectivity.getConnection();
        String sql = ("SELECT labourRate FROM Mechanic WHERE staffID = '" + mechanic + "'");

        try {
            stm = conn.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            labourPrice = rs.getDouble(1);

            // System.out.println("does this long query work?");
            System.out.println("labour price is " + labourPrice);
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
        DBConnectivity.disconnect(conn);
        return labourPrice;
    }

    public String getJobDuration() {
        System.out.println("getJobDuration");
        conn = DBConnectivity.getConnection();
        String sql = ("SELECT actualTime FROM Job WHERE VehicleregNo ='" + regNo + "'");
        try {
            stm = conn.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            jobDuration = rs.getString(1);
            System.out.println("yessa");
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
        DBConnectivity.disconnect(conn);
        return jobDuration;
    }

    public String getJobNo() {
        System.out.println("getJobNo");
        conn = DBConnectivity.getConnection();
        String sql = ("SELECT jobNo FROM Job WHERE VehicleregNo ='" + regNo + "'");
        try {
            stm = conn.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            jobNo = rs.getString(1);
            //System.out.println("yessa");
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
        DBConnectivity.disconnect(conn);
        return jobNo;
    }

    public String getDateBookedIn() {
        System.out.println("getDateBookedIn");
        conn = DBConnectivity.getConnection();
        String sql = ("SELECT dateVisited FROM Vehicle WHERE regNo ='" + regNo + "'");
        try {
            stm = conn.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            dateBookedIn = rs.getString(1);
            //System.out.println("yessa");
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
        DBConnectivity.disconnect(conn);
        return dateBookedIn;
    }

    public String getTelNo() {
        System.out.println("getTelNo");
        conn = DBConnectivity.getConnection();
        String sql = ("SELECT phone FROM Customer WHERE customerId ='" + customerId + "'");
        try {
            stm = conn.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            telNo = rs.getString(1);
            //System.out.println("yessa");
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
        DBConnectivity.disconnect(conn);
        return telNo;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton doneButton;
    private javax.swing.JButton doneButton2;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton refreshButton2;
    private javax.swing.JComboBox regNoComboBox;
    private javax.swing.JComboBox regNoComboBox2;
    // End of variables declaration//GEN-END:variables
}
